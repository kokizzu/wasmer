window.SIDEBAR_ITEMS = {"enum":[["CraneliftOptLevel","Possible optimization levels for the Cranelift codegen backend."],["LLVMOptLevel","Defines the optimization level used to compile a `Module`."]],"mod":[["engine",""],["errors",""],["extern_ref",""],["externals",""],["instance",""],["mem_access",""],["module",""],["tunables",""],["typed_function",""],["vm","The `vm` module re-exports wasmer-vm types."]],"struct":[["Artifact","A compiled wasm module, ready to be instantiated."],["BaseTunables","Tunable parameters for WebAssembly compilation. This is the reference implementation of the `Tunables` trait, used by default."],["Cranelift","Global configuration options used to create an `wasmer_engine::Engine` and customize its behavior."],["EngineBuilder","The Builder contents of `Engine`"],["Features","Controls which experimental features will be enabled. Features usually have a corresponding WebAssembly proposal."],["LLVM",""],["MiddlewareReaderState","The state of the binary reader. Exposed to middlewares to push their outputs."],["Singlepass",""],["VMConfig","Configuration for the the runtime VM Currently only the stack size is configurable"]],"trait":[["CompilerConfig","The compiler configuration options."],["FunctionMiddleware","A function middleware specialized for a single function."],["ModuleMiddleware","A shared builder for function middlewares."],["Tunables","An engine delegates the creation of memories, tables, and globals to a foreign implementor of this trait."]]};