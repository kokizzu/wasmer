window.SIDEBAR_ITEMS = {"enum":[["GetIfPackageHasNewVersionResult",""],["ProgrammingLanguage",""],["QueryPackageError",""]],"fn":[["download_and_unpack_targz","Whether the top-level directory should be stripped"],["get_all_available_registries",""],["get_checkouts_dir",""],["get_webc_dir",""],["list_bindings","List all bindings associated with a particular package."],["query_command_from_registry",""],["query_package_from_registry","Returns the download info of the packages, on error returns all the available packages i.e. ((“foo/python”, “wasmer.io”), (“bar/python” “wasmer.io”)))"],["test_if_registry_present",""],["try_unpack_targz","Convenience function that will unpack .tar.gz files and .tar.bz files to a target directory (does NOT remove the original .tar.gz)"],["unpack_sans_parent",""],["unpack_with_parent",""],["whoami",""]],"mod":[["api",""],["client",""],["config",""],["graphql",""],["interface",""],["login",""],["package",""],["publish",""],["types",""],["utils",""],["wasmer_env",""]],"static":[["GLOBAL_CONFIG_FILE_NAME",""],["PACKAGE_TOML_FALLBACK_NAME",""],["PACKAGE_TOML_FILE_NAME",""]],"struct":[["Bindings","A library that exposes bindings to a Wasmer package."],["BindingsGenerator","The generator used to create [`Bindings`]."],["PackageDownloadInfo",""],["RegistryClient","API client for the Wasmer registry."]]};