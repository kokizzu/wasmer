initSidebarItems({"enum":[["GetIfPackageHasNewVersionResult",""],["QueryPackageError",""],["Registries",""]],"fn":[["download_and_unpack_targz","Whether the top-level directory should be stripped"],["format_graphql",""],["get_all_available_registries",""],["get_all_local_packages","Returns a list of all locally installed packages"],["get_all_names_in_dir",""],["get_checkouts_dir",""],["get_executable_file_from_path","Returns the (manifest, .wasm file name), given a package dir"],["get_global_install_dir","Returs the path to the directory where all packages on this computer are being stored"],["get_if_package_has_new_version","Returns true if a package has a newer version"],["get_local_package",""],["get_package_local_dir",""],["get_wasmer_root_dir",""],["install_package","Given a triple of [registry, name, version], downloads and installs the .tar.gz if it doesn’t yet exist, returns the (package dir, entrypoint .wasm file path)"],["query_command_from_registry",""],["query_package_from_registry","Returns the download info of the packages, on error returns all the available packages i.e. ((“foo/python”, “wapm.io”), (“bar/python” “wapm.io”)))"],["test_if_registry_present",""],["try_finding_local_command",""],["unpack_sans_parent",""],["wax_default_cooldown",""]],"mod":[["graphql",""]],"static":[["GLOBAL_CONFIG_FILE_NAME",""]],"struct":[["LocalPackage",""],["MultiRegistry",""],["PackageDownloadInfo",""],["PartialWapmConfig",""],["Proxy",""],["Registry",""],["UpdateNotifications",""]]});