window.SIDEBAR_ITEMS = {"enum":[["PackageSpecifier","A reference to some package somewhere that the user wants to run."]],"fn":[["resolve","Given the [`PackageInfo`] for a root package, resolve its dependency graph and figure out how it could be executed."]],"mod":[["filesystem_source",""],["in_memory_source",""],["inputs",""],["multi_source",""],["outputs",""],["resolve",""],["source",""],["utils",""],["wapm_source",""],["web_source",""]],"struct":[["Command",""],["Dependency","A dependency constraint."],["DependencyGraph","An acyclic, directed dependency graph."],["DistributionInfo","Information used when retrieving a package."],["Edge","An edge in the [`DependencyGraph`]."],["FileSystemSource","A [`Source`] that knows how to query files on the filesystem."],["InMemorySource","A [`Source`] that tracks packages in memory."],["ItemLocation",""],["MultiSource","A [`Source`] that works by querying multiple [`Source`]s in succession."],["Node","A node in the [`DependencyGraph`]."],["PackageId","An identifier for a package within a dependency graph."],["PackageInfo","Information about a packageâ€™s contents."],["PackageSummary","Some metadata a `Source` can provide about a package without needing to download the entire `*.webc` file."],["Resolution",""],["ResolvedFileSystemMapping",""],["ResolvedPackage","A package that has been resolved, but is not yet runnable."],["WapmSource","A [`Source`] which will resolve dependencies by pinging a Wasmer-like GraphQL endpoint."],["WebSource","A [`Source`] which can query arbitrary packages on the internet."],["WebcHash","The SHA-256 hash of a `*.webc` file."]],"trait":[["Source","Something that packages can be downloaded from."]]};